{
  "title": "CS150: Data Structures and Algorithms",
  "desc": "CS150: Data Structures and Algorithms",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": {
    "Java_Generic": {
      "ext": [
        "java"
      ],
      "label": "Java (Generic)",
      "lang": "java"
    },
    "Java": {
      "ext": [
        "java"
      ],
      "label": "Java",
      "lang": "java"
    },
    "Processing": {
      "ext": [
        "pde"
      ],
      "label": "Processing",
      "lang": "java"
    },
    "C++": {
      "ext": [
        "cpp",
        "h"
      ],
      "label": "C++",
      "lang": "C++"
    }
  },
  "lang": "en",
  "build_JSAV": false,
  "build_cmap": false,
  "suppress_todo": true,
  "assumes": "ADT; relations",
  "dispModComp": true,
  "tag": "CS2",
  "chapters": {
    "Preface": {
      "Intro": {
        "long_name": "How to Use this System",
        "sections": {}
      }
    },
    "Introduction": {
      "Background/IntroDSA": {
        "long_name": "Introduction to Data Structures and Algorithms",
        "sections": {
          "Data Structures and Algorithms": {
            "IntroSumm": {
              "long_name": "Introduction Summary Questions",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Some Software Engineering Topics": {
            "showsection": false
          }
        }
      },
      "Design/ADT": {
        "long_name": "Abstract Data Types",
        "sections": {
          "Abstract Data Types": {
            "ADTCON": {},
            "IntroADTSumm": {
              "long_name": "ADT Summary Questions",
              "required": true,
              "points": 1.0,
              "threshold": 4
            }
          }
        }
      }
    },
    "Programming Tutorials": {
      "Tutorials/cmdline": {
        "long_name": "Command Line Basics",
        "sections": {
          "What's A CLI?": {
            "terminal": {
              "long_name": "Terminal",
              "required": false,
              "points": 0,
              "threshold": 1.0
            }
          }
        }
      },
      "Tutorials/parameters": {
        "long_name": "Parsing Command Line Parameters",
        "sections": {
          "Parameters In Programming": {}
        }
      },
      "Tutorials/debugmethods": {
        "long_name": "Debugging Methods",
        "sections": {}
      },
      "Tutorials/scanning": {
        "long_name": "Reading In Input",
        "sections": {
          "The Scanner Class": {}
        }
      },
      "Tutorials/junitstart": {
        "long_name": "Junit Testing and You",
        "sections": {
          "Getting Started": {}
        }
      },
      "Tutorials/junitbasic": {
        "long_name": "Writing JUnit Tests",
        "sections": {}
      }
    },
    "Object-Oriented Programming": {
      "Design/IntroOO": {
        "long_name": "Introduction to Object Orientation",
        "sections": {
          "Introduction to Object Oriented Programming": {}
        }
      }
    },
    "List Interface & Array-based Lists": {
      "List/ListADT": {
        "long_name": "List ADT",
        "sections": {
          "List Terminology and Notation": {
            "listADTposCON": {
              "long_name": "List ADT Positions Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "List ADT Programming Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          }
        }
      },
      "List/ListArray": {
        "long_name": "Array-based Lists",
        "sections": {
          "Array-Based List Implementation": {
            "alistVarsCON": {
              "long_name": "Array-based List Variables Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "alistIntroCON": {
              "long_name": "Array-based List Intro Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "alistInsertCON": {
              "long_name": "Array-based List Insertion Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Insert Practice Exericse": {
            "AlistInsertPRO": {
              "long_name": "Array-based List Insert Exercise",
              "required": true,
              "points": 1,
              "threshold": 3
            }
          },
          "Append and Remove": {
            "alistAppendCON": {
              "long_name": "Array-based List Append Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "alistRemoveCON": {
              "long_name": "Array-based List Remove",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AlistRemovePRO": {
              "long_name": "Array-based List Remove Exercise",
              "required": true,
              "points": 1,
              "threshold": 4
            }
          },
          "Array-based List Practice Questions": {
            "ALSumm": {
              "long_name": "Array-based List Summary",
              "required": true,
              "points": 1,
              "threshold": 3
            }
          }
        }
      }
    },
    "Algorithm Analysis": {
      "AlgAnal/AnalPrelim": {
        "long_name": "Problems, Algorithms, and Programs",
        "sections": {
          "Problems, Algorithms, and Programs": {
            "ProblemAlgorithmCON": {
              "long_name": "Problem, Algorithm, and Program definitions Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AnalPrelimSumm": {
              "long_name": "Problems, Algorithms, Programs Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 4
            }
          }
        }
      },
      "AlgAnal/AnalIntro": {
        "long_name": "Comparing Algorithms",
        "sections": {
          "Comparing Algorithms": {
            "CompareGrowth": {
              "long_name": "Comparing Growth Rates Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 3
            }
          },
          "Growth Rates Ordering Exercise": {
            "GrowthRatesPRO": {
              "long_name": "Growth Rates Ordering Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 3
            }
          }
        }
      },
      "AlgAnal/AnalCases": {
        "long_name": "Best, Average, and Worst Cases",
        "sections": {
          "Best, Worst, and Average Cases": {
            "AnalCasesSameCON": {
              "long_name": "Simple analysis cases slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AnalCasesDiffCON": {
              "long_name": "Best, Worst, and Average cases slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      }
    },
    "Stacks": {
      "List/StackArray": {
        "long_name": "Array-based Stacks",
        "sections": {
          "Stack Terminology": {},
          "Array-Based Stacks": {
            "astackVarCON": {
              "long_name": "Array stack variables slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "astackTopCON": {
              "long_name": "Array stack top position slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "astackPushCON": {
              "long_name": "Array stack push slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AstackPushPRO": {
              "long_name": "Array-based Stack Push Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Pop": {
            "astackPopCON": {
              "long_name": "Array stack pop slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AstackPopPRO": {
              "long_name": "Array-based Stack Pop Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      },
      "List/StackLinked": {
        "long_name": "Linked Stacks",
        "sections": {
          "Linked Stack Implementation": {
            "lstackDiagramCON": {},
            "lstackPushCON": {
              "long_name": "Linked stack push",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LstackPushPRO": {
              "long_name": "Linked Stack Push Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Linked Stack Pop": {
            "lstackPopCON": {
              "long_name": "Linked stack pop",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LstackPopPRO": {
              "long_name": "Linked Stack Pop Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            },
            "lstackTwostackCON": {}
          }
        }
      }
    },
    "Recursion": {
      "RecurTutor/RecIntro": {
        "long_name": "Recursion Chapter Introduction",
        "sections": {
          "Introduction": {
            "recurIntroDelegateCON": {
              "long_name": "Recursion Introduction Slideshow 1",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            },
            "recurIntroDetailsCON": {
              "long_name": "Recursion Introduction Slideshow 2",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "RecurTutor/Write": {
        "long_name": "How to write a recursive function",
        "sections": {
          "Writing a recursive function": {
            "recurWriteStepsCON": {
              "long_name": "Recursion Code Writing Slideshow 1",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            },
            "recurWriteSumCON": {
              "long_name": "Recursion Code Writing Slideshow 2",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "RecurTutor/CodeCompletionEx": {
        "long_name": "Code Completion Exercises",
        "sections": {
          "Introduction": {},
          "Recursion Programming Exercise: Largest": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Multiply": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: GCD": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: log": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Cummulative Sum": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Add odd positions": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Sum Of the Digits": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Count Characters": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          }
        }
      },
      "RecurTutor/HarderWrite": {
        "long_name": "Writing More Sophisticated Recursive Functions",
        "sections": {}
      },
      "RecurTutor/HarderCodeCompletionEx": {
        "long_name": "Harder Code Completion Exercises",
        "sections": {
          "Recursion Programming Exercise: Minimum of array": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Is Reverse": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Decimal to Binary": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          }
        }
      },
      "RecurTutor/WritingEx": {
        "long_name": "Code Writing Exercises",
        "sections": {
          "Recursion Programming Exercise: Cannonballs": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Check Palindrome": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Subset Sum": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          },
          "Recursion Programming Exercise: Pascal Triangle": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          }
        }
      },
      "RecurTutor/Trace": {
        "long_name": "Tracing recursive code",
        "sections": {
          "Tracing Recursive Code": {
            "recurTraceWindCON": {
              "long_name": "Recursion Tracing Winding and Unwinding",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            },
            "recurTraceSumCON": {
              "long_name": "Recursion Tracing Sum Function",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            },
            "recurTraceFactCON": {
              "long_name": "Recursion Tracing Factorial Function",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            },
            "recurTraceDmnCON": {
              "long_name": "Recursion Tracing General Domino Effect",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            },
            "TOHfigCON": {},
            "recurTraceTOHCON": {
              "long_name": "Recursion Tracing Towers of Hanoi",
              "required": true,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "RecurTutor/TracingEx": {
        "long_name": "Tracing Practice Exercises",
        "sections": {
          "Forward Flow Tracing Exercises": {
            "RecTraceSummFwdFlow": {
              "long_name": "Recursion Tracing Exercises Set 1",
              "required": true,
              "points": 1.0,
              "threshold": 1.0,
              "showhide": "Show"
            }
          },
          "Backward Flow Tracing Exercises": {
            "RecTraceSummbckwrdFlow": {
              "long_name": "Recursion Tracing Exercises Set 2",
              "required": true,
              "points": 1.0,
              "threshold": 1.0,
              "showhide": "Show"
            }
          },
          "Find Error Tracing Exercises": {
            "RecTraceSummFuncErr": {
              "long_name": "Recursion Tracing Exercises Set 3",
              "required": true,
              "points": 1.0,
              "threshold": 1.0,
              "showhide": "Show"
            }
          },
          "Two Recursive Calls Tracing Exercises": {
            "RecTraceSummTwoRC": {
              "long_name": "Recursion Tracing Exercises Set 4",
              "required": true,
              "points": 1.0,
              "threshold": 1.0,
              "showhide": "Show"
            }
          },
          "How Many Times Tracing Exercises": {
            "RecTraceSummHowmany": {
              "long_name": "Recursion Tracing Exercises Set 5",
              "required": true,
              "points": 1.0,
              "threshold": 1.0,
              "showhide": "Show"
            }
          },
          "Harder Tracing Exercises": {
            "RecTraceSummHard": {
              "long_name": "Recursion Tracing Exercises Set 6",
              "required": true,
              "points": 1.0,
              "threshold": 1.0,
              "showhide": "Show"
            }
          }
        }
      },
      "RecurTutor/RecSummaryEx": {
        "long_name": "Recursion Summary Exercises",
        "sections": {
          "Summary Questions": {
            "RecChapterSumm": {
              "long_name": "Recursion Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5.0,
              "showhide": "Show"
            }
          }
        }
      }
    },
    "Queues": {
      "List/Queue": {
        "long_name": "Queues",
        "sections": {
          "Queue Terminology": {},
          "Array-Based Queues": {
            "aqueueFirstCON": {
              "long_name": "Array-based Queue Positions Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "aqueueDriftCON": {
              "long_name": "Array-based Queue Drift Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "aqueueBadCON": {
              "long_name": "Array-based Queue Bad Representation Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "aqueueCircularCON": {
              "long_name": "Circular Array-based Queue Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "aqueueEmptyCON": {
              "long_name": "Empty Circular Array-based Queue Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Array-based Queue Implementation": {
            "aqueueVarCON": {
              "long_name": "Array-based Queue Variables Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "AqueueEnqueuePRO": {
              "long_name": "Array-based Queue Enqueue Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Array-based Dequeue Practice": {
            "AqueueDequeuePRO": {
              "long_name": "Array-based Queue Dequeue Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      },
      "List/QueueLinked": {
        "long_name": "Linked Queues",
        "sections": {
          "Linked Queues": {
            "lqueueIntroCON": {
              "long_name": "Linked Queue Intro",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "lqueueEnqueueCON": {
              "long_name": "Linked Queue Enqueue",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LqueueEnqueuePRO": {
              "long_name": "Linked Queue Enqueue Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Linked Dequeue": {
            "lqueueDequeueCON": {
              "long_name": "Linked Queue Dequeue",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LqueueDequeuePRO": {
              "long_name": "Linked Queue Dequeue Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Comparison of Array-Based and Linked Queues": {
            "StackQSumm": {
              "long_name": "Stack/Queue Summary Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      }
    },
    "Linked Lists": {
      "List/ListLinked": {
        "long_name": "Linked Lists",
        "sections": {
          "Linked Lists": {
            "llistRepCON": {},
            "llistBadCON": {
              "long_name": "Linked List Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "llistBadDelCON": {
              "long_name": "Linked List Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "llistInitCON": {},
            "llistHeaderCON": {}
          },
          "Linked List Implementation": {
            "llistVarsCON": {
              "long_name": "Linked List Variables Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "llistConsCON": {
              "long_name": "Linked List Constructors Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "llistInsertCON": {
              "long_name": "Linked List Insert Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "llistSpecialCON": {
              "long_name": "Linked List Special Insert Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LlistInsertPRO": {
              "long_name": "Linked List Insert Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          },
          "Linked List Remove": {
            "llistRemoveCON": {
              "long_name": "Linked List Remove Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "LlistRemovePRO": {
              "long_name": "Linked List Remove Exercise",
              "required": true,
              "points": 2,
              "threshold": 5
            },
            "llistOtherCON": {
              "long_name": "Linked List Position Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "List/ListAnalysis": {
        "long_name": "Comparison of List Implementations",
        "sections": {
          "Space Comparison": {
            "ListOverhead": {
              "long_name": "Breakeven Point Exercise",
              "required": true,
              "points": 1,
              "threshold": 3
            }
          },
          "Time Comparison": {
            "LLSumm": {
              "long_name": "Linked List Summary Exercise",
              "required": true,
              "points": 2,
              "threshold": 6
            }
          }
        }
      },
      "List/ListDouble": {
        "long_name": "Doubly Linked Lists",
        "sections": {
          "Doubly Linked Lists": {
            "dlistDiagramCON": {},
            "dlistInsertCON": {
              "long_name": "Doubly Linked List Insert",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "dlistAppendCON": {
              "long_name": "Doubly Linked List Append",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "dlistRemoveCON": {
              "long_name": "Doubly Linked List Remove",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "dlistPrevCON": {
              "long_name": "Doubly Linked List Prev",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "List/ListElement": {
        "long_name": "List Element Implementations",
        "sections": {
          "List Element Implementations": {
            "listElementDataCON": {
              "long_name": "List Element Data",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "listElementTypeCON": {
              "long_name": "List Element Type",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "listElementDeleteCON": {
              "long_name": "List Element Delete",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "ListSumm": {
              "long_name": "List Summary Questions",
              "required": true,
              "points": 1,
              "threshold": 3
            }
          }
        }
      }
    },
    "Binary Trees": {
      "Binary/BinaryTreeIntro": {
        "long_name": "Binary Trees Chapter Introduction",
        "sections": {}
      },
      "Binary/BinaryTree": {
        "long_name": "Binary Tree Terminology",
        "sections": {
          "Definitions and Properties": {
            "BinExampCON": {},
            "BinDiffCON": {},
            "FullCompCON": {},
            "DefSumm": {
              "long_name": "Tree Definition Summary Exercises",
              "required": false,
              "points": 2,
              "threshold": 8
            }
          },
          "Practice Questions": {
            "Treeprobs": {
              "long_name": "Tree/Node Exercises",
              "showhide": "show",
              "required": true,
              "points": 1,
              "threshold": 4
            }
          }
        }
      },
      "Binary/RecursiveDS": {
        "long_name": "Binary Tree as a Recursive Data Structure",
        "sections": {
          "Binary Tree as a Recursive Data Structure": {
            "ListRecDSCON": {},
            "BinRecDSCON": {},
            "SumBinaryTreeCON": {
              "long_name": "Sum values in a Binary Tree Slide Show",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Binary/BinaryTreeFullThm": {
        "long_name": "Full Binary Tree Theorem",
        "sections": {}
      },
      "Binary/BinaryTreeTraversal": {
        "long_name": "Binary Tree Traversals",
        "sections": {
          "Binary Tree Traversals": {
            "BinExampCON": {},
            "preorderCON": {
              "long_name": "Preorder Traversal Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "postorderCON": {
              "long_name": "Postorder Traversal Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "inorderCON": {
              "long_name": "Inorder Traversal Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Implementation": {
            "btTravInorderPRO": {
              "long_name": "Binary Tree Inorder Traversal Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            }
          },
          "Postorder Traversal Practice": {
            "btTravPostorderPRO": {
              "long_name": "Binary Tree Postorder Traversal Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            }
          },
          "Preorder Traversal Practice": {
            "btTravPreorderPRO": {
              "long_name": "Binary Tree Preorder Traversal Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            }
          },
          "Summary Questions": {
            "TravSumm": {
              "long_name": "Tree Traversal Summary Questions",
              "required": true,
              "points": 1.0,
              "threshold": 3
            }
          }
        }
      },
      "Binary/WritingTraversals": {
        "long_name": "Implementing Tree Traversals",
        "sections": {
          "Implementing Tree Traversals": {},
          "Binary Tree Increment By One Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 1.0
          }
        }
      },
      "BTRecurTutor/BinaryTreeInfFlw": {
        "long_name": "Binary Tree Information Flow",
        "sections": {
          "Information Flow in Recursive Functions": {},
          "Binary Tree Set Depth Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Collect-and-return": {
            "BinaryTreeMistakesCON": {
              "long_name": "Binary Tree Common Mistakes Slideshow",
              "required": false,
              "points": 1.0,
              "threshold": 0.90
            }
          },
          "Binary Tree Check Sum Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Binary Tree Leaf Nodes Count Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Binary Tree Sum Nodes Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Combining Information Flows": {},
          "Binary Tree Check Value Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Combination Problems": {},
          "Binary Tree Height Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Binary Tree Get Difference Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          },
          "Binary Tree Has Path Sum Exercise": {
            "learning_tool": "code-workout",
            "resource_type": "external_assignment",
            "resource_name": "",
            "points": 2.0
          }
        }
      },
      "Binary/CompleteTree": {
        "long_name": "Array Implementation for Complete Trees",
        "sections": {
          "Array Implementation for Complete Binary Trees": {
            "CompleteFIB": {
              "long_name": "Complete Tree Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      },
      "Binary/Heaps": {
        "long_name": "Heaps and Priority Queues",
        "sections": {
          "Heaps and Priority Queues": {
            "heapinsertCON": {
              "long_name": "Heap insert Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "heapinsertPRO": {
              "long_name": "Heap Insert Proficiency Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            }
          },
          "Building a Heap": {
            "heapbuildCON": {
              "long_name": "Heapbuild Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "heapbuildPRO": {
              "long_name": "Heap Build Proficiency Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 1.0,
              "threshold": 0.90
            },
            "heapbuildProofCON": {
              "long_name": "Heap build analysis proof Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Removing from the heap": {
            "heapmaxCON": {
              "long_name": "Remove Max Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "heapremovePRO": {
              "long_name": "Heap Remove Exercise",
              "exer_options": {
                "JXOP-code": "none"
              },
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            },
            "heapremoveCON": {
              "long_name": "Remove Any Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Priority Queues": {
            "HeapSumm": {
              "long_name": "Heap Question Summary",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          }
        }
      }
    },
    "Sorting": {
      "Sorting/InSort": {
        "long_name": "Chapter Introduction: Sorting",
        "sections": {}
      },
      "Sorting/SortNotation": {
        "long_name": "Sorting Terminology and Notation",
        "sections": {
          "Sorting Terminology and Notation": {
            "SortIntroSumm": {
              "long_name": "Sorting Intro Summary",
              "required": true,
              "points": 1.0,
              "threshold": 3
            }
          }
        }
      },
      "Design/Comparison": {
        "long_name": "Comparing Records",
        "sections": {
          "Comparing Records": {
            "CompareSumm": {
              "long_name": "Record Comparison Summary Exercise",
              "required": true,
              "points": 1,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/InsertionSort": {
        "long_name": "Insertion Sort",
        "sections": {
          "Insertion Sort": {
            "insertionsortCON": {
              "long_name": "Insertion Sort Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "insertionsortAV": {
              "long_name": "Insertion Sort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "InssortPRO": {
              "long_name": "Insertion Sort Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Insertion Sort Analysis": {
            "InsertionSortWorstCaseCON": {
              "long_name": "Insertion Sort Worst Case Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "InsertionSortBestCaseCON": {
              "long_name": "Insertion Sort Best Case Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "InsertionSortAverageCaseCON": {
              "long_name": "Insertion Sort Average Case Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "InssortSumm": {
              "long_name": "Insertion Sort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/BubbleSort": {
        "long_name": "Bubble Sort",
        "sections": {
          "Bubble Sort": {
            "bubblesortS1CON": {
              "long_name": "Bubble Sort Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "bubblesortS2CON": {
              "long_name": "Bubble Sort Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "bubblesortAV": {
              "long_name": "Bubble Sort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "BubsortPRO": {
              "long_name": "Bubble Sort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 3
            }
          },
          "Bubble Sort Analysis": {
            "BubbleSortAnalysisCON": {
              "long_name": "Bubble Sort Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "BubsortSumm": {
              "long_name": "Bubble Sort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/SelectionSort": {
        "long_name": "Selection Sort",
        "sections": {
          "Selection Sort": {
            "selectionsortS1CON": {
              "long_name": "Selection Sort Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "selectionsortS2CON": {
              "long_name": "Selection Sort Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "selectionsortAV": {
              "long_name": "Selection Sort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "SelsortPRO": {
              "long_name": "Selection Sort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          },
          "Selection Sort Analysis": {
            "SelectionSortAnalysisCON": {
              "long_name": "Selection Sort Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "SelsortSumm": {
              "long_name": "Selection Sort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/Shellsort": {
        "long_name": "Shellsort",
        "sections": {
          "Shellsort": {
            "shellsortCON1": {
              "long_name": "Shellsort Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "shellsortCON2": {
              "long_name": "Shellsort Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "shellsortCON3": {},
            "shellsortCON4": {
              "long_name": "Shellsort Slideshow 3",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "shellsortCON5": {
              "long_name": "Shellsort Slideshow 4",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "shellsortCON6": {},
            "shellsortCON7": {
              "long_name": "Shellsort Slideshow 5",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "shellsortCON8": {},
            "shellsortCON9": {
              "long_name": "Shellsort Slideshow 6",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "ShellsortSublistSumm": {
              "long_name": "Shellsort Sublist Proficency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Putting It Together": {
            "shellsortAV": {
              "long_name": "Shellsort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "ShellsortSeries": {
              "long_name": "Shellsort Series Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Shellsort Practice Exercise": {
            "shellsortPRO": {
              "long_name": "Shellsort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "Optimizing Shellsort": {
            "shellsortPerf": {
              "long_name": "Shellsort Performance Activity",
              "required": true,
              "points": 2.0,
              "threshold": 1.0
            }
          },
          "Shellsort Summary Questions": {
            "ShellsortSumm": {
              "long_name": "Shellsort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/Mergesort": {
        "long_name": "Mergesort Concepts",
        "sections": {
          "Mergesort Concepts": {
            "mergesortAV": {
              "long_name": "Mergesort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "mergesortCON": {
              "long_name": "Merging Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "MergesortMergePRO": {
              "long_name": "Mergesort Merging Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Mergsort Practice Exercise": {
            "mergesortPRO": {
              "long_name": "Mergesort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            },
            "MergeSortAnalysisCON": {
              "long_name": "Mergesort Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Sorting/Quicksort": {
        "long_name": "Quicksort",
        "sections": {
          "Introduction": {
            "QuicksortPivotPRO": {
              "long_name": "Quicksort Pivot Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Partition": {
            "quicksortCON": {
              "long_name": "Quicksort Partition Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuicksortPartitPRO": {
              "long_name": "Quicksort Partition Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            },
            "QuickSortPartitionAnalysisCON": {
              "long_name": "Quicksort Partition Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Putting It Together": {
            "quicksortAV": {
              "long_name": "Quicksort Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "quicksortPRO": {
              "long_name": "Quicksort Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90,
              "exer_options": {
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              }
            }
          },
          "Quicksort Analysis": {
            "QuickSortWorstCaseCON": {
              "long_name": "Quicksort Worst Case Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuickSortBestCaseCON": {
              "long_name": "Quicksort Best Case Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuickSortAverageCaseCON": {
              "long_name": "Quicksort Average Case Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "QuicksortSumm": {
              "long_name": "Quicksort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Sorting/Heapsort": {
        "long_name": "Heapsort",
        "sections": {
          "Heapsort": {
            "heapsortCON": {
              "long_name": "Heapsort Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HeapsortStepPRO": {
              "long_name": "Heapsort RemoveMax Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          },
          "Heapsort Proficiency Practice": {
            "heapsortPRO": {
              "long_name": "Heapsort Proficiency Exercise",
              "exer_options": {
                "JXOP-code": "none",
                "JXOP-feedback": "continuous",
                "JXOP-fixmode": "fix"
              },
              "required": true,
              "points": 2.0,
              "threshold": 0.9
            }
          },
          "Heapsort Analysis": {
            "HeapSortAnalysisCON": {
              "long_name": "Heapsort Analysis Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HeapsortSumm": {
              "long_name": "Heapsort Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      }
    },
    "Hashing": {
      "Hashing/HashIntro": {
        "long_name": "Introduction",
        "sections": {
          "Introduction": {
            "hashIntroCON1": {
              "long_name": "Hashing Intro Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Hashing/HashFunc": {
        "long_name": "Hash Function Principles",
        "sections": {
          "Hash Function Principles": {
            "Birthday": {
              "long_name": "Birthday Problem Calculator",
              "required": true,
              "points": 1.0,
              "threshold": 1.0
            }
          }
        }
      },
      "Hashing/HashFuncExamp": {
        "long_name": "Sample Hash Functions",
        "sections": {
          "Sample Hash Functions": {
            "hashFuncExCON1": {
              "long_name": "Hash Function Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "hashFuncExCON2": {
              "long_name": "Hash Function Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "MidSquare": {
              "long_name": "Mid-Square Calculator",
              "required": true,
              "points": 0.5,
              "threshold": 1.0
            }
          },
          "A Simple Hash Function for Strings": {
            "StringSimple": {
              "long_name": "Simple String Folding Calculator",
              "required": true,
              "points": 0.5,
              "threshold": 1.0
            }
          },
          "String Folding": {
            "StringSfold": {
              "long_name": "Improved String Folding Calculator",
              "required": true,
              "points": 0.5,
              "threshold": 1.0
            }
          },
          "Hash Function Practice": {
            "HashFuncFIBSumm": {
              "long_name": "Hash Function Pick Slot Summary",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "Hash Function Review Questions": {
            "HashFuncSumm": {
              "long_name": "Hash Function Summary Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Hashing/OpenHash": {
        "long_name": "Open Hashing",
        "sections": {
          "Open Hashing": {
            "openhashCON": {},
            "OpenHashPRO": {
              "long_name": "Open Hashing Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          }
        }
      },
      "Hashing/BucketHash": {
        "long_name": "Bucket Hashing",
        "sections": {
          "Bucket Hashing": {
            "buckethashCON1": {
              "long_name": "Bucket Hashing Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashBucketPRO": {
              "long_name": "Bucket Hashing Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          },
          "An Alternate Approach": {
            "buckethashCON2": {
              "long_name": "Bucket Hashing Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashBucket2PRO": {
              "long_name": "Alternate Bucket Hashing Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Hashing/HashCSimple": {
        "long_name": "Collision Resolution",
        "sections": {
          "Collision Resolution": {
            "linProbeCON1": {
              "long_name": "Linear Probing Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "linProbeCON2": {
              "long_name": "Linear Probing Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashLinearPPRO": {
              "long_name": "Linear Probing Proficiency Exercise",
              "required": true,
              "points": 1.0,
              "threshold": 5
            }
          }
        }
      },
      "Hashing/HashCImproved": {
        "long_name": "Improved Collision Resolution",
        "sections": {
          "Linear Probing by Steps": {
            "collisionCON1": {
              "long_name": "Linear Probing By Steps Slideshow 1",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "collisionCON2": {
              "long_name": "Linear Probing By Steps Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashLinearStepPPRO": {
              "long_name": "Linear Probing By Steps Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          },
          "Pseudo-Random Probing": {
            "collisionCON3": {
              "long_name": "Pseudo-Random Probing Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashPseudoRandomPPRO": {
              "long_name": "Pseudo-Random Probing Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            },
            "collisionCON4": {
              "long_name": "Avoiding the Train",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Quadratic Probing": {
            "collisionCON5": {
              "long_name": "Quadratic Probing Slideshow",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashQuadraticPPRO": {
              "long_name": "Quadratic Probing Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            },
            "collisionCON6": {
              "long_name": "Quadratic Probing Problem",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            }
          },
          "Double Hashing": {
            "collisionCON7": {
              "long_name": "Double Hashing Slideshow 2",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "collisionCON8": {
              "long_name": "Double Hashing Slideshow 3",
              "required": false,
              "points": 0.0,
              "threshold": 1.0
            },
            "HashDoublePPRO": {
              "long_name": "Double Hashing Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          }
        }
      }
    },
    "Graphs": {
      "Graph/GraphIntro": {
        "long_name": "Introduction and Terminology",
        "sections": {
          "Graph Terminology": {
            "GdirundirCON": {},
            "GneighborCON": {},
            "GpathDefCON": {},
            "GconcomCON": {},
            "GsparseDefCON": {}
          },
          "Graph Representations": {
            "GdirRepCON": {},
            "GundirRepCON": {},
            "GweightedCON": {},
            "GspaceCalcSumm": {
              "long_name": "Graph Space Requirements Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 5
            }
          },
          "Graph Terminology Questions": {
            "GraphIntroSumm": {
              "long_name": "Graph Terminology Summary Exercise",
              "required": true,
              "points": 3.0,
              "threshold": 10
            }
          }
        }
      },
      "Graph/GraphImpl": {
        "long_name": "Graph Implementation",
        "sections": {}
      },
      "Graph/GraphTraversal": {
        "long_name": "Graph Traversal",
        "sections": {
          "Graph Traversals": {},
          "Depth-First Search": {
            "graphDFS": {
              "long_name": "Depth First Search Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "graphDFSPE": {
              "long_name": "DFS Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            }
          },
          "Breadth-First Search": {
            "graphBFS": {
              "long_name": "Breadth First Search Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "graphBFSPE": {
              "long_name": "BFS Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            }
          }
        }
      },
      "Graph/GraphTopsort": {
        "long_name": "Topological Sort",
        "sections": {
          "Topological Sort": {
            "topsortCON": {},
            "topSort": {
              "long_name": "Topological Sort (DFS) visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "qTopSort": {
              "long_name": "Topological Sort (Queue) visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            }
          }
        }
      },
      "Graph/GraphShortest": {
        "long_name": "Shortest-Paths Problems",
        "sections": {
          "Shortest-Paths Problems": {
            "dijkstraCON": {},
            "DijkstraAV": {
              "long_name": "Dijkstra's Algorithm Visualization",
              "required": false,
              "points": 0,
              "showhide": "none",
              "threshold": 1.0
            },
            "DijkstraPE": {
              "long_name": "Dijkstra's Algorithm Proficiency Exercise",
              "required": true,
              "points": 2.0,
              "threshold": 0.90
            }
          }
        }
      }
    },
   "Appendix": {
      "Glossary": {
        "long_name": "Glossary",
        "sections": {}
      },
      "Bibliography": {
        "long_name": "Bibliography",
        "sections": {}
      }
    }
  }
}
